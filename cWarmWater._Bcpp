#include "cWarmWater.h"

void cWarmWater::Control(void){
	// If Warm Water is needed, execute the pump with the static power plus power determined by PID controller.
	// Else switch PID to manual and stop pump.
	WarmWaterFlow = analogRead(PinWarmWaterFlow)/1023.0*Vcc*76/6-26/6; // WarmWaterFlow determined by Sensor converted to Liters/min
	double Kwp = (0.022-0.0151)/(15-2.6)*(WarmWaterFlow-2.6)+0.0151; // Adaption of Pump Power to required primary Flow by static value
	if (WarmWaterFlow > 2.0){
		PowerStatic = Kwp * WarmWaterFlow*(SpTemp-10)/((IsTempBoilerTop.get()*3.0-100)-15);
		Pump.run(SpTemp, IsTemp.get(), PowerStatic); // switch to automatic mode
		Period.restart();
	}
	else{
	Pump.run(); // manual mode (stop pump)
	PowerStatic = 0;	
	}
	if(Trigger.get())
	setParam();
}

void cWarmWater::setParam()
{
	double P = 0.0025;
	double I = 0.0;
	double D = 0.0;
	SpTemp = 45;
	Pump.SetTunings(P, Pump.GetKi(), D);
	Pump.SetTunings(P, I, D);
	Pump.SetOutputLimits(-1.0, 1.0);
}

void cWarmWater::getSP( JsonObject& root )
{
	root["WTs"] = SpTemp;
}

int cWarmWater::setSP( JsonObject& root )
{
	if(root.containsKey("WTs")) {
		if(root["WTs"].is<double>()) {
                    double SpTemp_ = root["WTs"].as<double>();
                    if ((SpTemp_>40)&&(SpTemp_<60)&&(SpTemp_!=SpTemp)) {
			SpTemp = SpTemp_;
			return true;
                    }
		}
	}
	
	return false;
}

void cWarmWater::getData( JsonObject& root )
{
	root["WP"] = Pump.get();
	root["WTi"] = IsTemp.get();
	root["Wn"] = WarmWaterFlow;
	root["WS"] = PowerStatic;
	root["WG"] = Pump.get()+PowerStatic;		
	root["WTifromB"] = IsTempWarmWaterFromBoiler.get();
	root["WTitoB"] = IsTempWarmWaterToBoiler.get();
}
